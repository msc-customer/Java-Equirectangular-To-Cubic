<!--
- Copyright 2010 Leo Sutic <leo.sutic@gmail.com>
-  
- Licensed under the Apache License, Version 2.0 (the "License"); 
- you may not use this file except in compliance with the License. 
- You may obtain a copy of the License at 
- 
-     http://www.apache.org/licenses/LICENSE-2.0 
-     
- Unless required by applicable law or agreed to in writing, software 
- distributed under the License is distributed on an "AS IS" BASIS, 
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
- See the License for the specific language governing permissions and 
- limitations under the License. 
-->
<project name="bigshot" default="help" basedir="..">
    
    <property name="temp" value="temp/"/>
    <property name="src" value="src/"/>
    <property name="doc" value="doc/"/>
    <property name="final" value="final/"/>
    <property name="version" value="1.1"/>
    <property name="package-dir" value="${final}/bigshot"/>
    <property name="site-dir" value="${basedir}/../site/"/>
    
    <target name="clean">
        <mkdir dir="${temp}/"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${temp}/"/>
        </delete>
        <mkdir dir="${final}/"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${final}/"/>
        </delete>
    </target>
    
    <target name="build">
        <mkdir dir="${temp}/classes/"/>
        <javac failonerror="true" fork="yes" 
            destdir="${temp}/classes/"
            classpath="${ibuild.temp}/classes/" 
            deprecation="on"
            debug="on"
            includeantruntime="false">
            <src path="${src}/java/"/>
        </javac>
    </target>
    
    <target name="docs">
        <mkdir dir="${package-dir}/doc/js"/>
        <property name="jsdoc-path" value="${ant.home}/../jsdoc-toolkit"/>
        <java fork="yes" jar="${jsdoc-path}/jsrun.jar"
            dir="${basedir}">
            <arg value="${jsdoc-path}/app/run.js"/>
            <arg value="-D=packageName:Bigshot ${version}"/>
            <arg value="-t=${basedir}/tools/jsdoc"/>
            <arg value="-d=${package-dir}/doc/js"/>
            <arg value="${src}/js/"/>
        </java>
        <copy todir="${package-dir}/doc/js">
            <fileset dir="${doc}/jsdoc-files/"/>
        </copy>
    </target>
    
    <target name="docs-help">
        <mkdir dir="${package-dir}/doc/js"/>
        <property name="jsdoc-path" value="${ant.home}/../jsdoc-toolkit"/>
        <java fork="yes" jar="${jsdoc-path}/jsrun.jar"
            dir="${basedir}">
            <arg value="${jsdoc-path}/app/run.js"/>
            <arg value="-h"/>
        </java>
    </target>
    
    <target name="package">
        <antcall target="docs"/>
        <jar destfile="${package-dir}/bigshot.jar">
            <fileset dir="${temp}/classes/" includes="bigshot/**"/>
            <fileset dir="${src}/java/" includes="bigshot/**.txt"/>
            <manifest>
                <attribute name="Main-Class" value="bigshot.MakeImagePyramid"/>
            </manifest>
        </jar>
        <copy todir="${package-dir}">
            <fileset dir="${src}/js/"/>
            <fileset dir="${src}/php/"/>
            <fileset dir="${doc}" includes="LICENSE.txt,README.txt"/>
        </copy>
        <java fork="yes" jar="${basedir}/tools/yuicompressor-2.4.2.jar"
            dir="${basedir}">
            <arg value="-o"/>
            <arg value="${package-dir}/bigshot-compressed.js"/>
            <arg value="${package-dir}/bigshot.js"/>
        </java>
        
        <concat destfile="${package-dir}/bigshot-full.js">
            <filelist dir="${src}/js/webgl/" files="sylvester.js"/>
            <filelist dir="${src}/js/webgl/" files="glUtils.js"/>
            <filelist dir="${src}/js/" files="bigshot.js"/>
        </concat>
        <java fork="yes" jar="${basedir}/tools/yuicompressor-2.4.2.jar"
            dir="${basedir}">
            <arg value="-o"/>
            <arg value="${package-dir}/bigshot-full-compressed.js"/>
            <arg value="${package-dir}/bigshot-full.js"/>
        </java>
        
        <concat destfile="${package-dir}/bigshot-full-and-optional.js">
            <filelist dir="${src}/js/webgl/" files="sylvester.js"/>
            <filelist dir="${src}/js/webgl/" files="glUtils.js"/>
            <filelist dir="${src}/js/webgl/" files="webgl-debug.js"/>
            <filelist dir="${src}/js/" files="bigshot.js"/>
        </concat>
        <java fork="yes" jar="${basedir}/tools/yuicompressor-2.4.2.jar"
            dir="${basedir}">
            <arg value="-o"/>
            <arg value="${package-dir}/bigshot-full-and-optional-compressed.js"/>
            <arg value="${package-dir}/bigshot-full-and-optional.js"/>
        </java>
        <zip destfile="${final}/bigshot-${version}.zip">
            <fileset dir="${package-dir}"/>
        </zip>
    </target>
    
    <target name="dist">
        <antcall target="clean"/>
        <antcall target="build"/>
        <antcall target="package"/>
    </target>
    
    <target name="build-image">
        <java fork="yes" jar="${package-dir}/bigshot.jar"
            dir="${basedir}">
            <arg value="test/sample.jpg"/>
            <arg value="${temp}/image.bigshot"/>
            <!--
            <arg value="- -format"/>
            <arg value="archive"/>
            -->
            <jvmarg value="-Xmx768M"/>
        </java>
    </target>
    
    <target name="build-carousel">
        <java fork="yes" jar="${package-dir}/bigshot.jar"
            dir="${basedir}">
            <arg value="${basedir}/test/vr-sample.jpg"/>
            <arg value="${temp}/carousel.bigshot"/>
            <arg value="--transform"/>
            <arg value="carousel"/>
            <arg value="--format"/>
            <arg value="archive"/>
            <jvmarg value="-Xmx1024M"/>
        </java>
    </target>
    
    <target name="build-vr">
        <mkdir dir="${temp}/vr.bigshot"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${temp}/vr.bigshot"/>
        </delete>
        <java fork="yes" jar="${package-dir}/bigshot.jar"
            dir="${basedir}">
            <arg value="${basedir}/test/vr-sample.jpg"/>
            <arg value="${temp}/vr.bigshot"/>
            <arg value="--preset"/>
            <arg value="dzi-cubemap"/>
            <arg value="--format"/>
            <arg value="archive"/>
            <jvmarg value="-Xmx1024M"/>
        </java>
    </target>
    
    <target name="build-site">
        <delete includeEmptyDirs="true">
            <fileset dir="${site-dir}/doc/"/>
        </delete>
        <copy todir="${site-dir}/doc/">
            <fileset dir="${package-dir}/doc/"/>
        </copy>
    </target>
    
    <target name="host">
        <echo><![CDATA[Point your web browser at:
http://localhost/src/test/test.html
    To test Bigshot
http://localhost/src/test/vrpano.html
    To test Bigshot VR Panorama 
    (WebGL-capable web browser required)]]></echo>
        <java classname="minihttpd.MinimalHttpd"
            classpath="${temp}/classes/" fork="yes">
            <arg value="."/>
        </java>
    </target>
    
    <target name="demo">
        <antcall target="clean"/>
        <antcall target="build"/>
        <antcall target="package"/>
        <antcall target="build-image"/>
        <antcall target="build-vr"/>
        <antcall target="host"/>
    </target>
    
    <target name="help">
        <echo><![CDATA[Targets:
clean: 
    Cleans the build environment.

build: 
    Compiles all sources (the image pyramid generator 
    and the minimal HTTPd server).

build-image: 
    builds the image pyramid for the test page

build-vr: 
    builds the image pyramid(s) for the vr test page

host: 
    starts the minimal httpd so we can access the test 
    page

dist:
    Cleans the environment and creates a distribution 
    package.

demo: 
    Compiles the sources, builds the test image pyramids,
    and starts the HTTP server.]]></echo>
    </target>
</project>
